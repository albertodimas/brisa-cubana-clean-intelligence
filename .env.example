# ============================================
# DEVELOPMENT ENVIRONMENT (.env.local)
# ============================================
# Copy this file to .env or .env.local and configure for local development

# Database (local Docker Postgres)
DATABASE_URL="postgresql://postgres:postgres@localhost:5433/brisa_cubana_dev"
DATABASE_URL_UNPOOLED="postgresql://postgres:postgres@localhost:5433/brisa_cubana_dev"

# URLs
NEXT_PUBLIC_API_URL="http://localhost:3001"  # Producción: https://api.brisacubanacleanintelligence.com
INTERNAL_API_URL="http://localhost:3001"      # Producción: https://api.brisacubanacleanintelligence.com
ALLOWED_ORIGINS="http://localhost:3000"       # Producción: https://brisacubanacleanintelligence.com
NEXT_PUBLIC_BASE_URL="http://localhost:3000"  # Producción: https://brisacubanacleanintelligence.com
NEXT_PUBLIC_SITE_URL="http://localhost:3000"  # Usado por robots/sitemap; producción igual que NEXT_PUBLIC_BASE_URL
NEXTAUTH_URL="http://localhost:3000"          # Producción: https://brisacubanacleanintelligence.com

# Secrets (NEVER use these in production!)
JWT_SECRET="local-jwt-secret-only-for-dev"
API_TOKEN="local-api-token-only-for-dev"
AUTH_SECRET="local-auth-secret-only-for-dev"
AUTH_COOKIE_SECURE="false"                    # Forzar cookies secure solo cuando se ejecute con HTTPS

# Rate limiting (optional)
LOGIN_RATE_LIMIT="10"
LOGIN_RATE_LIMIT_WINDOW_MS="60000"

# Health checks (optional)
HEALTH_CHECK_TOKEN=""                               # Token opcional para autorizar /healthz (Bearer o ?token=)

# Observability (optional - leave empty for local development)
# Sentry - Error tracking and performance monitoring
# Production values (see OBSERVABILITY_QUICKSTART.md for setup):
NEXT_PUBLIC_SENTRY_DSN=""                          # Web: https://61251c0e4f5553d7febc1d31ab8a9da6@o4509669004541952.ingest.us.sentry.io/4510220183273472
SENTRY_DSN=""                                       # API: https://62f6df73f4e95ea1748c4718abeefdb1@o4509669004541952.ingest.us.sentry.io/4510220184059904
SENTRY_ORG="brisacubana"                           # Organization slug
SENTRY_PROJECT=""                                   # brisa-cubana-web or brisa-cubana-api
SENTRY_AUTH_TOKEN=""                                # Obtener desde 1Password (“Sentry · Brisa Cubana · Auth Token (Admin)”)
SENTRY_ENVIRONMENT="development"                    # development | preview | production
SENTRY_TRACES_SAMPLE_RATE="0.1"                     # Ajusta la tasa de muestreo de tracing (0-1)
SENTRY_PROFILES_SAMPLE_RATE="0.1"                   # Ajusta la tasa de muestreo de profiling (0-1)
NEXT_PUBLIC_SENTRY_TRACES_SAMPLE_RATE="0.1"         # Opcional: sobreescribe en el cliente
NEXT_PUBLIC_SENTRY_PROFILES_SAMPLE_RATE="0"         # El tracing de perfiles no se recolecta en cliente por defecto
SENTRY_RELEASE=""                                   # Optional: Set in CI/CD pipeline
LOG_DRAIN_VERIFICATION_CODE="local-log-drain-verification-code"

# Slack - Notifications and alerts
SLACK_WEBHOOK_URL=""                                # Get from https://api.slack.com/apps (see docs/operations/observability-setup.md)

# Marketing / leads (optional webhook to CRM, Slack, etc.)
LEAD_WEBHOOK_URL=""

# Stripe (test mode)
STRIPE_SECRET_KEY="sk_test_demo"
STRIPE_PUBLISHABLE_KEY="pk_test_demo"
STRIPE_WEBHOOK_SECRET="whsec_demo"

# Portal magic link (local development)
PORTAL_MAGIC_LINK_FROM="Brisa Cubana Dev <no-reply@localhost>"
PORTAL_MAGIC_LINK_SMTP_HOST="localhost"
PORTAL_MAGIC_LINK_SMTP_PORT="1025"
PORTAL_MAGIC_LINK_SMTP_USER=""
PORTAL_MAGIC_LINK_SMTP_PASSWORD=""
PORTAL_MAGIC_LINK_SMTP_SECURE="false"
PORTAL_MAGIC_LINK_BASE_URL="http://localhost:3000"
PORTAL_MAGIC_LINK_CONFIRMATION_PATH="/clientes/acceso/confirmar"
PORTAL_MAGIC_LINK_EXPOSE_DEBUG="true"
ENABLE_TEST_UTILS="true"
NEXT_PUBLIC_POSTHOG_KEY=""
NEXT_PUBLIC_POSTHOG_HOST="https://us.i.posthog.com"
NEXT_PUBLIC_POSTHOG_FORCE_ENABLE=""              # Solo pruebas E2E: "true" obliga a inicializar aunque navigator.webdriver sea true

# ============================================
# SETUP INSTRUCTIONS
# ============================================
# 1. Copy this file: cp .env.example .env
# 2. Start database: docker compose up -d
# 3. Run migrations: pnpm db:push
# 4. Seed database: pnpm db:seed
# 5. Start dev servers: pnpm dev --parallel

# For production deployment, see .env.production.example and DEPLOYMENT.md
