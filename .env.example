# ============================================
# DEVELOPMENT ENVIRONMENT (.env.local)
# ============================================
# Copy this file to .env or .env.local and configure for local development

# Database (local Docker Postgres)
DATABASE_URL="postgresql://postgres:postgres@localhost:5433/brisa_cubana_dev"
DATABASE_URL_UNPOOLED="postgresql://postgres:postgres@localhost:5433/brisa_cubana_dev"

# URLs
NEXT_PUBLIC_API_URL="http://localhost:3001"  # Producción: https://api.brisacubanacleanintelligence.com
INTERNAL_API_URL="http://localhost:3001"      # Producción: https://api.brisacubanacleanintelligence.com
ALLOWED_ORIGINS="http://localhost:3000"       # Producción: https://brisacubanacleanintelligence.com

# Secrets (NEVER use these in production!)
JWT_SECRET="local-jwt-secret-only-for-dev"
API_TOKEN="local-api-token-only-for-dev"
AUTH_SECRET="local-auth-secret-only-for-dev"

# Rate limiting (optional)
LOGIN_RATE_LIMIT="10"
LOGIN_RATE_LIMIT_WINDOW_MS="60000"

# Observability (optional - leave empty for local development)
NEXT_PUBLIC_SENTRY_DSN=""
SENTRY_DSN=""
LOG_DRAIN_VERIFICATION_CODE="local-log-drain-verification-code"

# Marketing / leads (optional webhook to CRM, Slack, etc.)
LEAD_WEBHOOK_URL=""

# Stripe (test mode)
STRIPE_SECRET_KEY="sk_test_demo"
STRIPE_PUBLISHABLE_KEY="pk_test_demo"
STRIPE_WEBHOOK_SECRET="whsec_demo"

# Portal magic link (local development)
PORTAL_MAGIC_LINK_FROM="Brisa Cubana Dev <no-reply@localhost>"
PORTAL_MAGIC_LINK_SMTP_HOST="localhost"
PORTAL_MAGIC_LINK_SMTP_PORT="1025"
PORTAL_MAGIC_LINK_SMTP_USER=""
PORTAL_MAGIC_LINK_SMTP_PASSWORD=""
PORTAL_MAGIC_LINK_SMTP_SECURE="false"
PORTAL_MAGIC_LINK_BASE_URL="http://localhost:3000"
PORTAL_MAGIC_LINK_CONFIRMATION_PATH="/clientes/acceso/confirmar"
PORTAL_MAGIC_LINK_EXPOSE_DEBUG="true"
ENABLE_TEST_UTILS="true"
NEXT_PUBLIC_POSTHOG_KEY=""
NEXT_PUBLIC_POSTHOG_HOST="https://us.posthog.com"

# ============================================
# SETUP INSTRUCTIONS
# ============================================
# 1. Copy this file: cp .env.example .env
# 2. Start database: docker compose up -d
# 3. Run migrations: pnpm db:push
# 4. Seed database: pnpm db:seed
# 5. Start dev servers: pnpm dev --parallel

# For production deployment, see .env.production.example and DEPLOYMENT.md
