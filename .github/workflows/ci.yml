name: CI (Main Branch)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ref:
        description: "Rama o tag a validar (por defecto main)"
        required: false
        default: "main"

jobs:
  quality:
    uses: ./.github/workflows/project-pipeline.yml
    secrets: inherit
    with:
      environment-name: preview-web
      job-name: Main branch safety checks
      checkout-ref: ${{ github.event_name == 'workflow_dispatch' && inputs.ref || '' }}
      run-secret-scan: true
      run-database-prep: true
      run-e2e-suite: critical
      next-public-api-url: "http://localhost:3001"
      playwright-report-name: playwright-report-critical
      playwright-retention-days: 7
      upload-playwright-only-on-failure: true

  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main' }}
    needs: quality
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      PNPM_HOME: ${{ env.PNPM_HOME || '/home/runner/setup-pnpm/node_modules/.bin' }}
      PATH: ${{ env.PATH || format('{0}:{1}', env.PNPM_HOME || '/home/runner/setup-pnpm/node_modules/.bin', '/usr/local/bin') }}
    environment:
      name: production-web
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.18.0
          run_install: false

      - name: Add pnpm to PATH
        run: |
          echo "$PNPM_HOME" >> $GITHUB_PATH
          sudo ln -sf "$PNPM_HOME/pnpm" /usr/local/bin/pnpm

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.13.0'

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Build API (prebuilt)
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_API }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          export PATH="$PNPM_HOME:/usr/local/bin:$PATH"
          echo "pnpm binary: $(command -v pnpm || echo 'NOT FOUND')"
          ls -l "$PNPM_HOME" || true
          pushd apps/api
          PATH="$PNPM_HOME:/usr/local/bin:$PATH" vercel pull --yes --environment=production --scope brisa-cubana --token="$VERCEL_TOKEN"
          PATH="$PNPM_HOME:/usr/local/bin:$PATH" vercel build --prod --scope brisa-cubana --token="$VERCEL_TOKEN"
          popd

      - name: Deploy API to Vercel Production
        id: deploy-api
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_API }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          URL=$(vercel deploy apps/api/.vercel/output --prebuilt --yes --prod --scope brisa-cubana --token="$VERCEL_TOKEN")
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          {
            echo "### 🚀 API Production Deployment"
            echo ""
            echo "- URL: $URL"
          } >> "$GITHUB_STEP_SUMMARY"
          rm -rf apps/api/.vercel/output

      - name: Build Web (prebuilt)
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          export PATH="$PNPM_HOME:/usr/local/bin:$PATH"
          echo "pnpm binary: $(command -v pnpm || echo 'NOT FOUND')"
          PATH="$PNPM_HOME:/usr/local/bin:$PATH" vercel pull --yes --environment=production --scope brisa-cubana --token="$VERCEL_TOKEN"
          PATH="$PNPM_HOME:/usr/local/bin:$PATH" vercel build --prod --scope brisa-cubana --token="$VERCEL_TOKEN"

      - name: Deploy Web to Vercel Production
        id: deploy-web
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          URL=$(vercel deploy .vercel/output --prebuilt --yes --prod --scope brisa-cubana --token="$VERCEL_TOKEN")
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          {
            echo ""
            echo "### 🌐 Web Production Deployment"
            echo ""
            echo "- URL: $URL"
          } >> "$GITHUB_STEP_SUMMARY"
          rm -rf .vercel/output

      - name: Audit recent Vercel deployments
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          {
            echo ""
            echo "### 📊 Vercel deployment audit"
            echo ""
          } >> "$GITHUB_STEP_SUMMARY"

          LIMIT=5 scripts/report-vercel-deployments.sh >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          LIMIT=5 scripts/report-vercel-deployments.sh apps/api >> "$GITHUB_STEP_SUMMARY"
