name: Vercel Preview Deployment

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch o tag a desplegar (por defecto, main)"
        required: false
        default: "main"

concurrency:
  group: vercel-preview-${{ github.event_name == 'workflow_dispatch' && inputs.ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  preview-deployment:
    name: Deploy to Vercel Preview
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.ref || github.ref }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.18.0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.13.0'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Add pnpm to PATH
        run: echo "$PNPM_HOME" >> $GITHUB_PATH

      - name: Generate Prisma Client
        run: pnpm exec prisma generate
        working-directory: apps/api

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Run tests
        run: pnpm test

      - name: Build applications
        run: pnpm build

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy Web to Vercel Preview
        id: deploy-web
        run: |
          URL=$(vercel deploy --yes --force --scope brisa-cubana --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "### üåê Web Preview Deployed" >> $GITHUB_STEP_SUMMARY
          echo "URL: $URL" >> $GITHUB_STEP_SUMMARY
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEB }}

      - name: Deploy API to Vercel Preview
        id: deploy-api
        run: |
          URL=$(vercel deploy --yes --force --scope brisa-cubana --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "### üöÄ API Preview Deployed" >> $GITHUB_STEP_SUMMARY
          echo "URL: $URL" >> $GITHUB_STEP_SUMMARY
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_API }}

      - name: Comment PR with deployment URLs
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            if (!context.payload.pull_request) {
              core.info('No pull request context available; skipping comment.');
              return;
            }

            const webUrl = '${{ steps.deploy-web.outputs.url }}';
            const apiUrl = '${{ steps.deploy-api.outputs.url }}';

            const comment = `## üöÄ Preview Deployment Ready!

            | Application | Preview URL |
            |-------------|-------------|
            | üåê Web | [${webUrl}](${webUrl}) |
            | üîß API | [${apiUrl}](${apiUrl}) |

            **Commit**: ${context.sha.substring(0, 7)}
            **Deployed by**: GitHub Actions (Vercel CLI)

            ---

            ‚úÖ Lint, Typecheck, and Tests passed before deployment.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
