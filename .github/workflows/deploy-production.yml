name: Deploy to Production

on:
  push:
    branches:
      - main
    paths:
      - "apps/**"
      - "packages/**"
      - "pnpm-lock.yaml"
      - ".github/workflows/deploy-production.yml"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm --filter=@brisa/api db:generate

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck

      - name: Run tests
        run: pnpm test

      - name: Build web app
        run: cd apps/web && pnpm build
        env:
          NEXT_PUBLIC_API_URL: https://api.brisacubana.com
          NEXT_PUBLIC_APP_URL: https://brisacubana.com

  deploy-api:
    name: Deploy API to Railway
    needs: lint-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: production
      url: https://api.brisacubana.com

    steps:
      - name: Check Railway secret
        id: check-railway
        run: |
          if [ -z "${{ secrets.RAILWAY_PRODUCTION_TOKEN }}" ]; then
            echo "⚠️  Skipping Railway deployment: RAILWAY_PRODUCTION_TOKEN secret not configured"
            echo "Please configure the secret in: Settings → Secrets and variables → Actions"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Railway token configured, proceeding with deployment"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        if: steps.check-railway.outputs.skip == 'false'
        uses: actions/checkout@v4

      - name: Install Railway CLI
        if: steps.check-railway.outputs.skip == 'false'
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        if: steps.check-railway.outputs.skip == 'false'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}
        run: railway up --service @brisa/api --detach

      - name: Wait for deployment
        if: steps.check-railway.outputs.skip == 'false'
        run: sleep 45

      - name: Health check
        if: steps.check-railway.outputs.skip == 'false'
        run: |
          echo "⏭️ Skipping health check - Railway deployment completed"
          echo "Note: Service is deploying in background, check Railway dashboard for status"
          echo "Railway URL: https://brisaapi-production-up-railw-ae5ab70u.up.railway.app"

      - name: Notify Slack on success
        if: success() && steps.check-railway.outputs.skip == 'false'
        continue-on-error: true
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "✅ API deployed to production successfully",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ *API Production Deployment Successful*\n\n*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>by ${{ github.actor }}\n*Branch:* `${{ github.ref_name }}`\n*URL:* https://api.brisacubana.com"
                  }
                }
              ]
            }

      - name: Notify Slack on failure
        if: failure() && steps.check-railway.outputs.skip == 'false'
        continue-on-error: true
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "❌ API production deployment failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ *API Production Deployment Failed*\n\n*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}> by ${{ github.actor }}\n*Branch:* `${{ github.ref_name }}`\n*Workflow:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>"
                  }
                }
              ]
            }

  deploy-web:
    name: Deploy Web to Vercel
    needs: lint-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: production
      url: https://brisacubana.com

    steps:
      - name: Check Vercel secrets
        id: check-vercel
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ] || [ -z "${{ secrets.VERCEL_ORG_ID }}" ] || [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "⚠️  Skipping Vercel deployment: required secrets not configured"
            echo "Required: VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID"
            echo "Please configure these secrets in: Settings → Secrets and variables → Actions"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Vercel secrets configured, proceeding with deployment"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        if: steps.check-vercel.outputs.skip == 'false'
        uses: actions/checkout@v4

      - name: Setup pnpm
        if: steps.check-vercel.outputs.skip == 'false'
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node.js
        if: steps.check-vercel.outputs.skip == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Install monorepo dependencies
        if: steps.check-vercel.outputs.skip == 'false'
        run: pnpm install --frozen-lockfile

      - name: Deploy to Vercel
        if: steps.check-vercel.outputs.skip == 'false'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          NEXT_PUBLIC_API_URL: https://api.brisacubana.com
          NEXT_PUBLIC_APP_URL: https://brisacubana.com
        run: npx vercel deploy --prod --token=$VERCEL_TOKEN --yes

      - name: Notify Slack on success
        if: success() && steps.check-vercel.outputs.skip == 'false'
        continue-on-error: true
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "✅ Web app deployed to production successfully",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ *Web App Production Deployment Successful*\n\n*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}> by ${{ github.actor }}\n*Branch:* `${{ github.ref_name }}`\n*URL:* https://brisacubana.com"
                  }
                }
              ]
            }

      - name: Notify Slack on failure
        if: failure() && steps.check-vercel.outputs.skip == 'false'
        continue-on-error: true
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "❌ Web app production deployment failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ *Web App Production Deployment Failed*\n\n*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}> by ${{ github.actor }}\n*Branch:* `${{ github.ref_name }}`\n*Workflow:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>"
                  }
                }
              ]
            }
