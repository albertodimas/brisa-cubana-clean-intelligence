name: Project Pipeline

on:
  workflow_call:
    inputs:
      job-name:
        required: false
        type: string
        default: "Quality checks"
      environment-name:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: "22.13.0"
      pnpm-version:
        required: false
        type: string
        default: "10.18.0"
      run-lint:
        required: false
        type: boolean
        default: true
      run-typecheck:
        required: false
        type: boolean
        default: true
      run-unit-tests:
        required: false
        type: boolean
        default: true
      run-build:
        required: false
        type: boolean
        default: true
      run-lighthouse:
        required: false
        type: boolean
        default: false
      checkout-ref:
        required: false
        type: string
        default: ""
      run-docs-verify:
        required: false
        type: boolean
        default: true
      run-secret-scan:
        required: false
        type: boolean
        default: false
      run-database-prep:
        required: false
        type: boolean
        default: false
      run-e2e-suite:
        required: false
        type: string
        default: "none"
      upload-playwright-report:
        required: false
        type: boolean
        default: true
      upload-playwright-only-on-failure:
        required: false
        type: boolean
        default: false
      playwright-report-name:
        required: false
        type: string
        default: "playwright-report"
      playwright-retention-days:
        required: false
        type: number
        default: 7
      database-url:
        required: false
        type: string
        default: "postgresql://postgres:postgres@127.0.0.1:5433/brisa_e2e"
      database-url-unpooled:
        required: false
        type: string
        default: "postgresql://postgres:postgres@127.0.0.1:5433/brisa_e2e"
      next-public-api-url:
        required: false
        type: string
        default: "http://localhost:3001"
      enable-test-utils:
        required: false
        type: boolean
        default: true
      portal-magic-link-from:
        required: false
        type: string
        default: ""
      portal-magic-link-base-url:
        required: false
        type: string
        default: ""
      portal-magic-link-confirmation-path:
        required: false
        type: string
        default: ""
      portal-magic-link-expose-debug:
        required: false
        type: string
        default: "true"
      next-public-posthog-key:
        required: false
        type: string
        default: ""
      next-public-posthog-host:
        required: false
        type: string
        default: "https://us.posthog.com"
    secrets:
      api-token:
        required: false
      jwt-secret:
        required: false
      auth-secret:
        required: false
      portal-magic-link-from:
        required: false
      portal-magic-link-smtp-host:
        required: false
      portal-magic-link-smtp-port:
        required: false
      portal-magic-link-smtp-user:
        required: false
      portal-magic-link-smtp-password:
        required: false
      portal-magic-link-smtp-secure:
        required: false
      e2e_admin_email:
        required: false
      e2e_admin_password:
        required: false
      e2e_coordinator_email:
        required: false
      e2e_coordinator_password:
        required: false
      log_drain_verification_code:
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pipeline:
    name: ${{ inputs.job-name }}
    environment:
      name: ${{ inputs.environment-name }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: brisa_e2e
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.checkout-ref || github.ref }}

      - name: Setup project
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}
          install-playwright: ${{ inputs.run-e2e-suite != 'none' }}
          run-prisma-generate: ${{ inputs.run-database-prep || inputs.run-e2e-suite != 'none' }}
          database-url: ${{ inputs.database-url }}
          database-url-unpooled: ${{ inputs.database-url-unpooled }}
          next-public-api-url: ${{ inputs.next-public-api-url }}
          enable-test-utils: ${{ inputs.enable-test-utils }}
          api-token: ${{ secrets.API_TOKEN }}
          jwt-secret: ${{ secrets.JWT_SECRET }}
          auth-secret: ${{ secrets.AUTH_SECRET }}
          e2e-admin-email: ${{ secrets.E2E_ADMIN_EMAIL }}
          e2e-admin-password: ${{ secrets.E2E_ADMIN_PASSWORD }}
          e2e-coordinator-email: ${{ secrets.E2E_COORDINATOR_EMAIL }}
          e2e-coordinator-password: ${{ secrets.E2E_COORDINATOR_PASSWORD }}
          portal-magic-link-from: ${{ secrets.PORTAL_MAGIC_LINK_FROM }}
          portal-magic-link-base-url: ${{ inputs.portal-magic-link-base-url }}
          portal-magic-link-confirmation-path: ${{ inputs.portal-magic-link-confirmation-path }}
          portal-magic-link-smtp-host: ${{ secrets.PORTAL_MAGIC_LINK_SMTP_HOST }}
          portal-magic-link-smtp-port: ${{ secrets.PORTAL_MAGIC_LINK_SMTP_PORT }}
          portal-magic-link-smtp-user: ${{ secrets.PORTAL_MAGIC_LINK_SMTP_USER }}
          portal-magic-link-smtp-password: ${{ secrets.PORTAL_MAGIC_LINK_SMTP_PASSWORD }}
          portal-magic-link-smtp-secure: ${{ secrets.PORTAL_MAGIC_LINK_SMTP_SECURE }}
          portal-magic-link-expose-debug: ${{ inputs.portal-magic-link-expose-debug }}
          next-public-posthog-key: ${{ inputs.next-public-posthog-key != '' && inputs.next-public-posthog-key || secrets.NEXT_PUBLIC_POSTHOG_KEY || '' }}
          next-public-posthog-host: ${{ inputs.next-public-posthog-host != '' && inputs.next-public-posthog-host || secrets.NEXT_PUBLIC_POSTHOG_HOST || '' }}
          log_drain_verification_code: ${{ secrets.LOG_DRAIN_VERIFICATION_CODE }}

      - name: Initialize database schema
        if: ${{ inputs.run-database-prep }}
        working-directory: apps/api
        shell: bash
        env:
          DATABASE_URL: ${{ inputs.database-url }}
          DATABASE_URL_UNPOOLED: ${{ inputs.database-url-unpooled }}
        run: pnpm exec prisma db push --accept-data-loss

      - name: Seed database
        if: ${{ inputs.run-database-prep }}
        working-directory: apps/api
        shell: bash
        env:
          DATABASE_URL: ${{ inputs.database-url }}
          DATABASE_URL_UNPOOLED: ${{ inputs.database-url-unpooled }}
        run: pnpm db:seed

      - name: Verify repository for secrets
        if: ${{ inputs.run-secret-scan }}
        shell: bash
        run: bash scripts/verify-no-secrets.sh

      - name: Verify documentation layout
        if: ${{ inputs.run-docs-verify }}
        shell: bash
        run: pnpm docs:verify

      - name: Verify version sync
        shell: bash
        run: pnpm verify:versions

      - name: Lint
        if: ${{ inputs.run-lint }}
        shell: bash
        run: pnpm lint

      - name: Typecheck
        if: ${{ inputs.run-typecheck }}
        shell: bash
        run: pnpm typecheck

      - name: Unit tests
        if: ${{ inputs.run-unit-tests }}
        shell: bash
        run: pnpm test

      - name: Build applications
        if: ${{ inputs.run-build }}
        shell: bash
        env:
          ENABLE_HSTS: ${{ inputs.run-lighthouse && 'false' || '' }}
          NEXT_PUBLIC_API_URL: ${{ inputs.next-public-api-url }}
        run: pnpm turbo run build --filter=@brisa/api --filter=@brisa/web

      - name: Verify public metadata endpoints
        if: ${{ inputs.run-build }}
        shell: bash
        run: |
          set -euo pipefail
          robots_path="apps/web/.next/server/app/robots.txt"
          sitemap_path="apps/web/.next/server/app/sitemap.xml"
          if [[ ! -f "$robots_path" ]]; then
            echo "Error: no se encontró $robots_path" >&2
            exit 1
          fi
          if [[ ! -f "$sitemap_path" ]]; then
            echo "Error: no se encontró $sitemap_path" >&2
            exit 1
          fi
          grep -qi "user-agent" "$robots_path"
          grep -qi "<urlset" "$sitemap_path"

      - name: Lighthouse CI
        if: ${{ inputs.run-lighthouse }}
        shell: bash
        env:
          NEXT_PUBLIC_API_URL: ${{ inputs.next-public-api-url }}
          INTERNAL_API_URL: ${{ inputs.next-public-api-url }}
        run: pnpm exec lhci autorun

      - name: Enforce Lighthouse warnings allowlist
        if: ${{ inputs.run-lighthouse }}
        shell: bash
        run: bash scripts/verify-lhci-warnings.sh

      - name: Run Playwright suite
        if: ${{ inputs.run-e2e-suite != 'none' }}
        shell: bash
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          CI: true
        run: |
          case "${{ inputs.run-e2e-suite }}" in
            smoke) pnpm test:e2e:smoke ;;
            critical) pnpm test:e2e:critical ;;
            full) pnpm test:e2e:full ;;
            *) echo "Unsupported Playwright suite '${{ inputs.run-e2e-suite }}'"; exit 1 ;;
          esac

      - name: Upload Playwright report
        if: ${{ inputs.run-e2e-suite != 'none' && inputs.upload-playwright-report && (!inputs.upload-playwright-only-on-failure || failure()) }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.playwright-report-name }}
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: ${{ inputs.playwright-retention-days }}

      - name: Upload Playwright test results
        if: ${{ inputs.run-e2e-suite != 'none' && inputs.upload-playwright-report && (!inputs.upload-playwright-only-on-failure || failure()) }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          if-no-files-found: ignore
          retention-days: ${{ inputs.playwright-retention-days }}
