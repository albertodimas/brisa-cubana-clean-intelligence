---
# Chaos Mesh Workflow
# Orchestrates multiple chaos experiments in sequence

apiVersion: chaos-mesh.org/v1alpha1
kind: Workflow
metadata:
  name: resilience-test-workflow
  namespace: brisa-production
spec:
  entry: entry
  templates:
    - name: entry
      templateType: Serial
      children:
        - pod-failure-test
        - network-delay-test
        - cpu-stress-test
        - validation

    # Step 1: Pod Failure
    - name: pod-failure-test
      templateType: PodChaos
      deadline: 2m
      podChaos:
        action: pod-failure
        mode: one
        selector:
          namespaces:
            - brisa-production
          labelSelectors:
            app: api
        duration: "30s"

    # Step 2: Network Delay
    - name: network-delay-test
      templateType: NetworkChaos
      deadline: 6m
      networkChaos:
        action: delay
        mode: one
        selector:
          namespaces:
            - brisa-production
          labelSelectors:
            app: api
        delay:
          latency: "500ms"
          correlation: "50"
        duration: "5m"

    # Step 3: CPU Stress
    - name: cpu-stress-test
      templateType: StressChaos
      deadline: 4m
      stressChaos:
        mode: one
        selector:
          namespaces:
            - brisa-production
          labelSelectors:
            app: api
        stressors:
          cpu:
            workers: 2
            load: 90
        duration: "3m"

    # Step 4: Validation
    - name: validation
      templateType: Task
      deadline: 1m
      task:
        container:
          name: validation
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              # Check API health
              STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://api-service:3001/healthz)
              if [ "$STATUS" -eq 200 ]; then
                echo "✅ API is healthy after chaos experiments"
                exit 0
              else
                echo "❌ API is unhealthy: HTTP $STATUS"
                exit 1
              fi
