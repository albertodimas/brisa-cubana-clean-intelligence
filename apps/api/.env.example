# ==============================================================================
# Brisa Cubana API - Environment Variables
# ==============================================================================
# Copy this file to .env and update with your actual values
# Run: cp .env.example .env
# Generate secrets: pnpm generate-secrets (from scripts/generate-secrets.sh)

# ==============================================================================
# APPLICATION
# ==============================================================================
NODE_ENV="development"  # Options: development, test, production
API_PORT=3001
WEB_APP_URL="http://localhost:3000"
LOG_LEVEL="debug"  # Options: error, warn, info, debug

# ==============================================================================
# DATABASE (REQUIRED)
# ==============================================================================
# Docker Compose maps PostgreSQL to port 5433 to avoid conflicts
# Connection pooling optimized for production (Prisma 6.16+)
# References:
# - https://www.prisma.io/docs/orm/prisma-client/setup-and-configuration/databases-connections/connection-pool
# - https://www.prisma.io/docs/guides/performance-and-optimization/connection-management
#
# For long-running processes (Railway):
#   connection_limit = (num_physical_cpus * 2 + 1) / instances
#   Example: (4 * 2 + 1) / 2 = 4-5 connections per instance
#
# For serverless (Vercel Functions):
#   connection_limit = 1 (start here, then optimize)
#   pool_timeout = 10 (seconds, increase if needed)
DATABASE_URL="postgresql://postgres:postgres@localhost:5433/brisa_cubana_dev?connection_limit=10&pool_timeout=10"

# ==============================================================================
# AUTHENTICATION (REQUIRED)
# ==============================================================================
# Generate with: openssl rand -hex 32
# MINIMUM 32 characters for security
JWT_SECRET="replace-with-64-char-random-value-use-openssl-rand-hex-32"
JWT_ACCESS_EXPIRATION="15m"   # Access token lifetime (15 minutes recommended)
JWT_REFRESH_EXPIRATION="7d"    # Refresh token lifetime (7 days recommended)

# Demo users for testing (format: email:password,email:password)
AUTH_DEMO_USERS="admin@brisacubanaclean.com:Admin123!,staff@brisacubanaclean.com:Staff123!,client@brisacubanaclean.com:Client123!"

# ==============================================================================
# SECURITY
# ==============================================================================
ENABLE_RATE_LIMITING="true"    # Disable only for testing (not recommended)
ENABLE_CORS="true"             # Disable only for testing (not recommended)

# Allowed origins for CORS (comma-separated)
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:3001,https://brisacubana.com"

# ==============================================================================
# REDIS (RECOMMENDED for production, optional for dev)
# ==============================================================================
# Used for: rate limiting (distributed), caching, sessions
# Fallback: in-memory storage (single instance only)
REDIS_URL="redis://localhost:6380"

# ==============================================================================
# PAYMENTS - Stripe (Optional)
# ==============================================================================
# Get keys from: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY="sk_test_xxxxxxxxxxxxxxxxxxxxx"
STRIPE_WEBHOOK_SECRET="whsec_xxxxxxxxxxxxxxxxxxxxx"
STRIPE_SUCCESS_URL="http://localhost:3000/dashboard?payment=success"
STRIPE_CANCEL_URL="http://localhost:3000/dashboard?payment=cancelled"

# ==============================================================================
# EMAIL - Resend (Optional)
# ==============================================================================
# Get API key from: https://resend.com/api-keys
RESEND_API_KEY="re_xxxxxxxxxxxxxxxxxxxxxxxxx"
EMAIL_FROM="noreply@brisacubanaclean.com"

# ==============================================================================
# STORAGE - AWS S3 (Optional)
# ==============================================================================
# CleanScore storage (optional, enables S3 upload during report generation)
CLEAN_SCORE_AI="false"
CLEAN_SCORE_S3_BUCKET="brisa-cubana-cleanscore"
CLEAN_SCORE_S3_REGION="us-east-1"
CLEAN_SCORE_S3_ACCESS_KEY=""
CLEAN_SCORE_S3_SECRET_KEY=""
CLEAN_SCORE_S3_ENDPOINT=""

# ==============================================================================
# MONITORING & OBSERVABILITY
# ==============================================================================
# Service identification
SERVICE_NAME="brisa-api"

# Sentry (Error tracking)
# Get DSN from: https://sentry.io/settings/projects/
SENTRY_DSN=""

# Slack alerts (optional)
ALERTS_SLACK_WEBHOOK="https://hooks.slack.com/services/..."

# OpenTelemetry OTLP Exporter (optional - for external trace collectors)
# Examples: Jaeger, Grafana Tempo, Honeycomb, New Relic
# OTLP_ENDPOINT="http://localhost:4318/v1/traces"
# OTLP_HEADERS='{"Authorization":"Bearer your_token"}'

# Prometheus metrics exporter port (default: 9464)
# Metrics available at http://localhost:9464/metrics
PROMETHEUS_PORT=9464

# Grafana API (optional)
GRAFANA_API_KEY=""

# Feature flags
ENABLE_DISTRIBUTED_TRACING="true"
ENABLE_STRUCTURED_LOGGING="true"
ENABLE_PERFORMANCE_MONITORING="true"
