import { Counter } from "prom-client";
import { register } from "../lib/metrics";

const conciergeConversationsTotal = new Counter({
  name: "brisa_api_concierge_conversations_total",
  help: "Total number of concierge conversations created",
  registers: [register],
});

const conciergeMessagesTotal = new Counter({
  name: "brisa_api_concierge_messages_total",
  help: "Total number of concierge messages processed",
  labelNames: ["role"],
  registers: [register],
});

const conciergeTokensTotal = new Counter({
  name: "brisa_api_concierge_tokens_total",
  help: "Total tokens generated by concierge AI responses",
  registers: [register],
});

let conversationCount = 0;
let userMessages = 0;
let aiMessages = 0;
let tokensGenerated = 0;

export function recordConversationCreated() {
  conversationCount += 1;
  conciergeConversationsTotal.inc();
}

export function recordMessage(role: "USER" | "ASSISTANT", tokens?: number) {
  if (role === "USER") {
    userMessages += 1;
  } else {
    aiMessages += 1;
  }
  conciergeMessagesTotal.inc({ role });

  if (typeof tokens === "number" && !Number.isNaN(tokens)) {
    tokensGenerated += tokens;
    conciergeTokensTotal.inc(tokens);
  }
}

export function getConciergeSnapshot() {
  return {
    conversations: conversationCount,
    messages: {
      user: userMessages,
      assistant: aiMessages,
      total: userMessages + aiMessages,
    },
    tokensGenerated,
  };
}

export function resetConciergeMetrics() {
  conversationCount = 0;
  userMessages = 0;
  aiMessages = 0;
  tokensGenerated = 0;
  conciergeConversationsTotal.reset();
  conciergeMessagesTotal.reset();
  conciergeTokensTotal.reset();
}
